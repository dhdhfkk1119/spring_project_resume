{{> layout/header}}

<div class="container my-5" style="max-with:1200px;">
    <div class="card shadow-sm">
        <div class="card-header bg-light py-3">
            <h2 class="h4 mb-0">{{member.username}}님의 포부를 담은 이력서</h2>
        </div>
        <div class="card-body">
            <form id="save-form" action="/resume/save" method="post">
                <!-- 이력서 제목 -->
                <div class="mb-3">
                    <label for="resumeTitle" class="form-label fw-bold">눈길을 잡아끄는 키워드</label>
                    <input type="text" class="form-control" id="resumeTitle" name="resumeTitle"
                           placeholder="예: 5년 경력의 센스있는 개발자" maxlength="50" required>
                    {{#errors.resumeTitle}}
                        <div class="text-danger small">{{.}}</div>{{/errors.resumeTitle}}
                </div>
                <!-- 이력서 본문 -->
                <div class="mb-3">
                    <label for="resumeContent" class="form-label fw-bold">마음을 움직이는 소개글</label>
                    <textarea class="form-control" id="resumeContent" name="resumeContent" rows="15"
                              placeholder="예: 제가 LA에 있을때는 말이죠 정말 제가 꿈에 무대인 메이저리그로 진출해서 가는 식당마다 싸인해달라 기자들은 항상 붙어다니며 취재하고 제가 그 머~ 어~ 대통령이 된 기분이였어요 그런데 17일만에 17일만에 마이너리그로 떨어졌어요 못던져서 그만두고 그냥 확 한국으로 가버리고 싶었어요 그래서 집에 가는길에 그 맥주6개 달린거 있잖아요 맥주6개 그걸 사가지고 집으로 갔어요 그전에는 술먹으면 야구 못하는줄 알았어요 그냥 한국으로 가버릴려구.... 그리고 맥주 6개먹고 확 죽어버릴려고 그랬어요 야구 못하게 되니깐 그러나 집에가서 일단은 부모님에게 전화를 해야겠다고 생각을 했어요 다음날 가려고 전화를 딱 했는데 어머니께서 찬호야 어후~ 찬호야 아들 잘있어 밥은 먹고 다니는겨~ 잘지내는겨 대뜸 그러시는 거에요 내가 말도 하기도 전해 그래서 저는 야구좀 안되지만 잘하고 있다고 여기사람들 잘챙겨준다고 라고 거짓말을  했어요 한국은 못가게 됬지 내일 야구장은 가야하지 막막하더라구요 그럼 어떻게 가야하나 생각을 했어요 그리고 나서 영어공부를 하게 됬는데요 영어... 감독한테 이야기를 못해서 한이 맺힌거지 그래서 이야기 할려고 한 단어씩 한 문장씩 만들어서 그래서 다음날 써 먹었어요 그리고 감독에게 Hey How are you라고 말했어요 이렇게 해서 영어공부를 하는거에요 그리고 마이너생활하다. 이제 메이저리그로 콜업이 됬어요 너무 긴장이 되더라구요 막상 콜업되니깐 콜업전에 그소식을 듣고 정말 기분이 미칠듯이 좋았는데 막상 콜업되고 2회때 갑작스럽게 마운드에 올라서니깐 긴장이 되더라구요 그리고 공을 던졌어요 역시 아니나 다를까 볼넷을 줬어요 그리고 나서 코치님이 딱 올라오는거에요 아 또 내려가는구나 라고 생각했는데 긴장하지 말고 편한하게 던져라 말하고 마운드를 내려가는 거에요 긴장이 한결 풀리더니 갑자기 포수 글러브쏙으로 잘들어가는거에요 어 된다. 이거 된다. 하고 속으로 생각했어요 그리고 직구 또 직구 던지고 새미 소사를 삼진잡았어요 정말 그때 기분은 말로 표현할수가 없는거에요. 이때부터 자신감이 붙은거에요 그리고 3회말에 만루의 위기가 있었는데 소사를 다시 삼진 처리하고 큰 위기를 넘기고 정말 그때 삼진 7개를 잡아내고 기분이 하늘로 날아갈것 같았어요 그리고 한국으로 왔는데 많은 사람들이 막 환호하고 그.. 뭐~ 영웅이다. 정말 대단하다. 라고 말했어요 그때 정말 이 눈물이 나더라구요 그리고 텍사스로 제가 이적을 했어요 하지만 못던졌어요 그리고 많은 사람들이 저를 보고 막 매국노 또 야구 때려쳐라 그러는거에요 그리고 한국으로 갔는데 이 계란이 날라오는거에요 그때 정말 확 죽어버리고 싶었어요 야구는 안되지 사람들은 날 싫어하지 정말 절망적이더라구요 너무 힘들어서 그냥 이대로 죽었으면 하는 안좋은 생각까지 할려고 그랬어요 그리고 2005년 도중에 샌디에이고로 트레이드 된거에요 그리고 2006년 대망의  제1회 WBC에 참가하게 되죠 그때 저는 선발투수가 아니였어요 감독님께서 찬호야 마무리투수로써 활약하면 좋을것 같은데 어떻게 생각하니라고 물어보시는거에요 그래서 저는 어후 전 괜찮습니다. 팀에 도움이 될수만 있다면 보직을 변경하겠습니다. 라고 말을했어요 그리고 저희 팀이 4강에 진출을 하게됬어요 어후 기분정말 끝내주더라구요 그리고 뉴욕메츠로 가다가 그리고 친정팀인 LA로 다시 갔어요 이때 정말 선수들이 반겨주더라구요 제가 맞히 집나간 강아지 처럼 반겨주더라구요 너무 좋았어요 그리고 시즌이 끝나고 필라델피아로 갔어요 이듬해에 저희팀이 월드시리즈라는 무대에 갑니다. 야 그때 기분정말 말로표현할수가 없을정도 였는데요 그리고 뉴욕양키스와 만났었고 페드로 마르티네즈 다음으로 바로 등판했어요 긴장이 되더라구요 제가 이닝을 마무리 지어야하는데 그렇지 못하고 결국 1실점하고 내려왔어요 아쉽게 준우승을 했지만 정말 좋은 경험이였다고 생각했고요 2010년때는 뉴욕양키스와 피츠버그로 이적을했는데 피츠버그때 제가 일본투수인 노모히데오의 123승과 타이기록을 세웠고 마침내 124승의 아시아 최다승을 거두었어요 그때 많은 분들이 축하한다고 막 그러시는거에요 기분이 정말 좋더라구요 그리고 나서 일본리그를 걸치다가 마침내 국내리그로 복귀를 했어요 그리고 한화에서 뛰다가 12년을 마지막으로 현역은퇴를 하게됬습니다. 한국에서 은퇴할때 정말 눈물이 나더라구요 말로 표현할수 없을만큼 정말 고마웠고 좋았습니다."
                              maxlength="5000" required></textarea>
                    {{#errors.resumeContent}}
                        <div class="text-danger small">{{.}}</div>{{/errors.resumeContent}}
                </div>
                <!-- 대표 이력서 설정 체크박스 -->
                <div class="form-check mb-3">
                    <input class="form-check-input" type="checkbox" name="isRep" id="isRep" value="true"
                           {{#resume.isRep}}checked{{/resume.isRep}}>
                    <label class="form-check-label" for="isRep">
                        이 이력서를 내 대표 이력서로 설정할게요
                    </label>
                </div>

                <hr>

                <h4>경력 정보</h4>
                <div id="career-container">
                    <!-- 경력 입력 필드 -->
                </div>
                <button type="button" id="add-career-btn" class="btn btn-outline-secondary">경력 추가</button>

                <hr>
                <div class="d-flex justify-content-end">
                    <a href="/resumes" class="btn btn-outline-secondary me-2">취소</a>
                    <button type="submit" id="submit-btn" class="btn btn-outline-primary">저장하기</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // 경력 정보 동적 추가/삭제 스크립트
    document.addEventListener('DOMContentLoaded', function () {
        const careerContainer = document.getElementById('career-container');
        const addCareerBtn = document.getElementById('add-career-btn');
        let careerIndex = 0; // 각 경력 필드를 구분하기 위한 인덱스

        // 날짜 입력을 위한 flatpickr 초기화 함수
        function initializeFlatpickr(element) {
            flatpickr(element, {
                dateFormat: "Y-m-d", // 날짜 형식 지정 (YYYY-MM-DD)
                locale: "ko" // 한글 지원 (CDN 추가 필요 시)
            });
        }

        addCareerBtn.addEventListener('click', function () {
            const careerDiv = document.createElement('div');
            careerDiv.classList.add('card', 'my-3', 'p-3', 'bg-light');
            // name 속성의 careers[index].fieldName 형태는 Spring Boot가 List<DTO>로 데이터를 바인딩할 수 있게 해줍니다.
            careerDiv.innerHTML = `
                <div class="row">
                    <div class="col-md-11">
                        <div class="mb-2">
                            <label class="form-label">회사명</label>
                            <input type="text" name="careers[${careerIndex}].corpName" class="form-control" max length="100">
                        </div>
                        <div class="mb-2">
                            <label class="form-label">직책</label>
                            <input type="text" name="careers[${careerIndex}].position" class="form-control" max length="100">
                        </div>
                        <div class="mb-2">
                            <label class="form-label">담당 업무</label>
                            <input type="text" name="careers[${careerIndex}].careerContent" class="form-control" max length="100">
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label class="form-label">입사일</label>
                                <input type="date" name="careers[${careerIndex}].startAt" class="form-control">
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">퇴사일</label>
                                <input type="date" name="careers[${careerIndex}].endAt" class="form-control">
                            </div>
                        </div>
                    </div>
                    <div class="col-md-1 d-flex align-items-center justify-content-center">
                        <button type="submit" class="btn btn-link p-0" title="삭제하기" style="color: Tomato;">
                            <i class="fa-solid fa-trash fs-5"></i>
                        </button>
                    </div>
                </div>
            `;
            careerContainer.appendChild(careerDiv);

            // 날짜 input에 flatpickr 적용
            const newDateInputs = careerDiv.querySelectorAll('input[type="date"]');
            newDateInputs.forEach(initializeFlatpickr);

            careerIndex++;
        });



        // '삭제' 버튼에 대한 이벤트 리스너 (이벤트 위임 사용)
        careerContainer.addEventListener('click', function (e) {
            if (e.target && e.target.classList.contains('remove-career-btn')) {
                // 가장 가까운 .card 요소를 찾아 삭제합니다.
                e.target.closest('.card').remove();
            }
        });
    });

    //빈 경력 폼을 제거, 유효성 검사, 불필요한 데이터 전송 방지
    const saveForm = document.getElementById('save-form');
    const submitBtn = document.getElementById('submit-btn');
    submitBtn.addEventListener('click', function() {
        const newCareerItems = document.querySelectorAll('.card.my-3'); // 새로 추가된 경력 아이템
        newCareerItems.forEach(item => {
            const corpNameInput = item.querySelector('input[name*="corpName"]');
            // 회사명이 비어있으면 해당 경력 폼 자체를 삭제
            if (corpNameInput && corpNameInput.value.trim() === '') {
                item.remove();
            }
        });

        if (saveForm.checkValidity()) {
            saveForm.submit();
        } else {
            saveForm.reportValidity(); // 유효하지 않은 필드에 브라우저 기본 경고창 표시
        }
    });
</script>

{{> layout/footer}}