{{> layout/header}}

<style>
    /* 화면 너비가 767.98px 이하일 때 (Bootstrap의 md 분기점) 적용될 스타일 */
    @media (max-width: 767.98px) {
        i.fs-5 {
            font-size: 1rem !important;
        }
    }
</style>

<div class="wrapper">
    <div class="content">
        <div class="container my-5" style="max-with:1200px;">
            <div class="card shadow-sm">
                <div class="card-header bg-light py-3">
                    <!-- 양쪽으로 정렬하기 위해 d-flex 적용 -->
                    <div class="d-flex justify-content-between align-items-center">
                        <h2 class="text-truncate h4 mb-0">{{member.username}}님의 이력서 업그레이드 중</h2>
                        <!-- 삭제 아이콘 버튼과 form -->
                        <form id="delete-form-icon" action="/resume/{{resume.resumeIdx}}/delete" method="post">
                            <button type="submit" class="btn btn-link p-0" title="삭제하기" style="color: Tomato;">
                                <i class="fa-solid fa-trash fs-5"></i>
                            </button>
                        </form>
                    </div>
                </div>
                <div class="card-body">
                    <form id="update-form" action="/resume/{{resume.resumeIdx}}/update" method="post">
                        <!-- 이력서 제목 -->
                        <div class="mb-3">
                            <label for="resumeTitle" class="form-label fw-bold">이력서 제목</label>
                            <input type="text" class="form-control" id="resumeTitle" name="resumeTitle"
                                   value="{{resume.resumeTitle}}" maxlength="50" required>
                            {{#errors.resumeTitle}}
                                <div class="text-danger small">{{.}}</div>{{/errors.resumeTitle}}
                        </div>
                        <!-- 이력서 본문 -->
                        <div class="mb-3">
                            <label for="resumeContent" class="form-label fw-bold">이력서 내용</label>
                            <textarea class="form-control" id="resumeContent" name="resumeContent"
                                      rows="10" maxlength="5000" required>{{resume.resumeContent}}</textarea>
                            {{#errors.resumeContent}}
                                <div class="text-danger small">{{.}}</div>{{/errors.resumeContent}}
                        </div>
                        <!-- 대표 이력서 설정 체크박스 -->
                        <div class="form-check mb-3">
                            <input class="form-check-input" type="checkbox" name="isRep" id="isRep" value="true"
                                   {{#resume.isRep}}checked{{/resume.isRep}} title="대표 이력서로 설정">
                            <label class="text-truncate d-inline-block mw-100 form-check-label" for="isRep">
                                이 이력서를 내 대표 이력서로 설정할게요
                            </label>
                        </div>

                        <hr>

                        <h4>경력 정보</h4>
                        <div id="career-container" data-initial-size="{{resume.careerList.size}}">
                            {{#resume.careerList}}
                                <div class="card my-3 p-3 bg-light career-item">
                                    <div class="d-flex align-items-center">
                                        <div class="flex-grow-1" style="min-width: 0;">
                                            <h5 class="card-title">{{corpName}}</h5>
                                            {{#position}}
                                                <h6 class="card-subtitle mb-2 text-muted">{{position}}</h6>
                                            {{/position}}

                                            {{#startAt}}
                                                {{#endAt}}
                                                    <p class="card-text"><small class="text-muted">{{startAt}} ~ {{endAt}}</small></p>
                                                {{/endAt}}
                                                {{^endAt}}
                                                    <p class="card-text"><small class="text-muted">{{startAt}} ~</small></p>
                                                {{/endAt}}
                                            {{/startAt}}
                                            <p class="card-text" style="white-space: pre-wrap;">{{careerContent}}</p>
                                        </div>
                                        <div class="flex-shrink-0 ms-3">
                                            <button type="button" class="btn btn-link p-0 remove-career-btn"
                                                    data-career-id="{{careerIdx}}" title="삭제하기" style="color: Tomato;">
                                                <i class="fa-solid fa-trash fs-5"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            {{/resume.careerList}}
                        </div>
                        <button type="button" id="add-career-btn" class="btn btn-outline-secondary">경력 추가</button>

                        <hr>
                        <div class="d-flex justify-content-end">
                            <a href="/resume/{{resume.resumeIdx}}" class="btn btn-outline-secondary me-2">취소</a>
                            <button type="submit" id="submit-btn" class="btn btn-outline-primary">수정완료</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // 📄 이 페이지의 모든 자바스크립트 코드는 HTML 문서가 완전히 로드된 후에 실행됩니다.
    document.addEventListener('DOMContentLoaded', function () {

        // =================================================================
        // 🚀 1. 초기 설정 및 변수 선언
        // =================================================================
        const elements = {
            updateForm: document.getElementById('update-form'),
            deleteFormIcon: document.getElementById('delete-form-icon'),
            careerContainer: document.getElementById('career-container'),
            addCareerBtn: document.getElementById('add-career-btn'),
        };

        const initialSize = elements.careerContainer.getAttribute('data-initial-size');
        let careerIndex = initialSize ? parseInt(initialSize, 10) : 0;


        // =================================================================
        // 🛠️ 2. 재사용을 위한 헬퍼(Helper) 함수
        // =================================================================

        /**
        * 📄 (함수) 새 경력 입력 폼 HTML 생성
        */
        function createCareerItemHTML(index) {
            return `
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1" style="min-width: 0;">
                        <div class="mb-2">
                            <label class="form-label">회사명</label>
                            <input type="text" name="careers[${index}].corpName" class="form-control" maxlength="50" required value="테스트 회사">
                        </div>
                        <div class="mb-2">
                            <label class="form-label">직책</label>
                            <input type="text" name="careers[${index}].position" class="form-control" maxlength="50" value="테스트 직책">
                        </div>
                        <div class="mb-2">
                            <label class="form-label">담당 업무</label>
                            <textarea name="careers[${index}].careerContent" class="form-control" rows="3" maxlength="500" required>테스트용 경력 내용입니다. 이 내용은 폼 제출 시 함께 전송됩니다.</textarea>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label class="form-label">입사일</label>
                                <input type="date" name="careers[${index}].startAt" class="form-control" value="2022-03-01">
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">퇴사일</label>
                                <input type="date" name="careers[${index}].endAt" class="form-control" value="2024-02-28">
                            </div>
                        </div>
                    </div>
                    <div class="flex-shrink-0 ms-3">
                        <button type="button" class="btn btn-link p-0 remove-career-btn" title="삭제하기" style="color: Tomato;">
                            <i class="fa-solid fa-trash fs-5"></i>
                        </button>
                    </div>
                </div>
            `;
        }

        function initializeFlatpickr(element) {
            flatpickr(element, { dateFormat: "Y-m-d", locale: "ko" });
        }


        // =================================================================
        // 👂 3. 사용자 행동 감지 (이벤트 리스너)
        // =================================================================

        // (이벤트 리스너들은 기존 코드와 동일하게 유지합니다)
        elements.deleteFormIcon.addEventListener('submit', function (e) {
            if (!confirm('정말 이 이력서를 삭제하시겠습니까? 되돌릴 수 없어요!')) {
                e.preventDefault();
            }
        });

        elements.addCareerBtn.addEventListener('click', function () {
            const careerDiv = document.createElement('div');
            careerDiv.classList.add('card', 'my-3', 'p-3', 'bg-light', 'career-item', 'new-career-item');
            careerDiv.innerHTML = createCareerItemHTML(careerIndex);
            elements.careerContainer.appendChild(careerDiv);
            const newDateInputs = careerDiv.querySelectorAll('input[type="date"]');
            newDateInputs.forEach(initializeFlatpickr);
            careerDiv.scrollIntoView({behavior: 'smooth', block: 'center'});
            const firstInput = careerDiv.querySelector('input[type="text"]');
            if (firstInput) firstInput.focus();
            careerIndex++;
        });

        elements.careerContainer.addEventListener('click', function (e) {
            const removeBtn = e.target.closest('.remove-career-btn');
            if (!removeBtn) return;
            const careerItem = removeBtn.closest('.career-item');
            if (!careerItem) return;
            if (!confirm('이 경력 항목을 삭제하시겠습니까?')) return;
            const careerId = removeBtn.getAttribute('data-career-id');
            if (careerId) {
                const hiddenInput = document.createElement('input');
                hiddenInput.type = 'hidden';
                hiddenInput.name = 'deletedCareerIds';
                hiddenInput.value = careerId;
                elements.updateForm.appendChild(hiddenInput);
                careerItem.remove();
            } else {
                careerItem.remove();
            }
        });

        // 폼의 'submit' 이벤트를 감지
        elements.updateForm.addEventListener('submit', function(e) {
            // 1. 빈 경력 폼 자동 제거
            const newCareerItems = document.querySelectorAll('.new-career-item');
            newCareerItems.forEach(item => {
                const corpNameInput = item.querySelector('input[name*="corpName"]');
                if (corpNameInput && corpNameInput.value.trim() === '') {
                    item.remove();
                }
            });
        });
    });
</script>

{{> layout/footer}}
