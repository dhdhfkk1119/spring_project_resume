{{> layout/header}}
<style>
    .action-buttons {
        display: none;
        position: absolute;
        top: 30px;
        right: 5px;
        background-color: white;
        border: 1px solid #ddd;
        padding: 5px 10px;
        border-radius: 6px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.1);
        z-index: 100;
    }

    .action-buttons button {
        display: flex;
        align-items: center;
        gap: 5px;
        background: none;
        border: none;
        padding: 5px 8px;
        cursor: pointer;
        width: 100%;
        text-align: left;
    }

    .action-buttons button:hover {
        background-color: #f5f5f5;
    }

    .action-buttons .delete:hover {
        color: red;
    }

    @media (max-width: 768px) {
        .card-body {
            flex-direction: column;
        }

        .card-body .w-75,
        .card-body .w-25 {
            width: 100% !important;
        }

        .action-buttons {
            right: 10px;
        }
    }
    .custom-gray {
        color: #373f57;
        font-size:12px;
    }
    .custom-bold {
        font-size : 16px;
        font-weight:700;
    }
    .apply-header {
        border-left: 5px solid #4a90e2; /* 포인트 컬러 */
        padding-left: 15px;
        margin-bottom: 30px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .apply-header h3 {
        color: #333;
        font-weight: 700;
        font-size: 1.8rem;
        letter-spacing: 0.05em;
        margin: 0;
    }

    .dt-span {
        color: #5c667b;
        width:86px;
    }
    dt {
        font-weight: 500;
    }
    dl {
        margin-bottom:0 !important;
    }
    dd {
        margin-bottom: 0 !important;
        margin-left: 0;
    }

    .left-info h5 {
        margin-bottom: 0;
    }
    .right-info button {
        width: 185px;
        background-color: #ff5656;
        height: 60px;
    }
    .custom-title {
        font-size: 26px;
        font-weight: bold;
    }
    .custom-Name {
        overflow: hidden;
        margin-right: 8px;
        padding-right: 2px;
        max-width: 380px;
        height: 28px;
        color: #222;
        font-size: 18px;
        font-weight: normal;
        line-height: 28px;
        text-overflow: ellipsis;
        vertical-align: middle;
        white-space: nowrap;
    }
    .custom-btn{
        border:0;
        border-radius:8px;
    }
    .custom-col {
        gap: 5px;
        flex-direction: column;
        display: flex;
        padding: 24px 0;
        width: 420px;
        font-size: 14px;
    }
</style>

<script>
    function toggleActions(id) {
        const box = document.getElementById('action-box-' + id);
        box.style.display = box.style.display === 'block' ? 'none' : 'block';
    }

    // 바깥 클릭 시 닫기
    window.addEventListener('click', function(e) {
        document.querySelectorAll('.action-buttons').forEach(box => {
            if (!box.contains(e.target) && !e.target.closest('.gear-btn')) {
                box.style.display = 'none';
            }
        });
    });
</script>
<div class="wrapper">
    <div class="content">
        <div class="container p-5">
            <div class="apply-header mb-4">
                <h3>현재 공고에 대한 정보</h3>
            </div>


            {{#recruit}}

                <!-- 헤더 정보 -->
                <div class="d-flex justify-content-between align-items-center pb-3 mb-3">
                    <div class="left-info">
                        <div class="fw-bold custom-Name">
                            <span>[ {{corp.corpName}} ]</span>
                            <span>기업입니다</span>
                        </div>
                        <span class="fw-bold mt-2 custom-title">{{recruitTitle}}</span>
                    </div>

                </div>


                <!-- 조건 정보 -->
                <div class="row border-top border-bottom" style="border-color: #e5e6eb;">
                    <div class="col custom-col">
                        <dl class="d-flex">
                            <dt class="dt-span">경력</dt>
                            <dd>{{career}}</dd>
                        </dl>
                        <dl class="d-flex">
                            <dt class="dt-span">학력</dt>
                            <dd>{{education}}</dd>
                        </dl>
                        <dl class="d-flex">
                            <dt class="dt-span">근무형태</dt>
                            <dd>{{workType}}</dd>
                        </dl>
                    </div>
                    <div class="col custom-col">
                        <dl class="d-flex">
                            <dt class="dt-span">모집 인원</dt>
                            <dd>{{recruitNumber}} 명</dd>
                        </dl>
                        <dl class="d-flex">
                            <dt class="dt-span">지역</dt>
                            <dd>{{area}}</dd>
                        </dl>
                        <dl class="d-flex">
                            <dt class="dt-span">입사 지원일</dt>
                            <dd>{{startAtFormatted}}</dd>
                        </dl>
                        <dl class="d-flex">
                            <dt class="dt-span">입사 마감일</dt>
                            <dd>{{endAtFormatted}}</dd>
                        </dl>
                    </div>
                </div>

            {{/recruit}}

            <div class="apply-header my-4">
                <h3>현재 공고에 지원한 지원자 정보 ({{appliedCount}} 명) </h3>
            </div>

            <div id="recruit-list">
                {{#recruitList.content}}
                    <div class="card mb-3">
                        <div class="card-body">
                            <p><strong>지원자 이름:</strong> {{resume.member.username}}</p>
                            <p><strong>이메일:</strong> {{resume.member.email}}</p>
                            <p><strong>이력서 제목:</strong> {{resume.resumeTitle}}</p>
                            <p><strong>지원일자:</strong> {{formattedAppliedAt}}</p>
                            <a href="/corp/resume/{{resume.resumeIdx}}" class="btn btn-sm btn-outline-primary">이력서 보기</a>
                        </div>
                    </div>
                {{/recruitList.content}}
            </div>
            {{^recruitList}}
                <div class="alert alert-warning text-center mt-5">
                    아직 지원한 사람이 없네요 ㅠㅠ
                </div>
            {{/recruitList}}


            <ul class="pagination d-flex justify-content-center">
                <li class="page-item">
                    <button id="loadMoreBtn" data-page="1" data-recruit-id="{{recruit.recruitIdx}}">지원자 더보기</button>
                </li>
            </ul>
        </div>
    </div>

</div>

{{> layout/footer}}
<script>
    const loadMoreBtn = document.getElementById('loadMoreBtn');
    const recruitId = loadMoreBtn.getAttribute('data-recruit-id');
    const recruitList = document.getElementById('recruit-list'); // div로 감싸진 지원자 목록

    loadMoreBtn.addEventListener('click', () => {
        const page = parseInt(loadMoreBtn.getAttribute('data-page'));
        fetch(`/recruit/api/${recruitId}/applied?page=${page}&size=3`)
            .then(res => res.json())
            .then(data => {
                data.content.forEach(applicant => {
                    const div = document.createElement('div');
                    div.className = "card mb-3";
                    div.innerHTML = `
                        <div class="card-body">
                            <p><strong>지원자 이름:</strong> ${applicant.username}</p>
                            <p><strong>이메일:</strong> ${applicant.email}</p>
                            <p><strong>이력서 제목:</strong> ${applicant.resumeTitle}</p>
                            <p><strong>지원일자:</strong> ${applicant.formattedAppliedAt}</p>
                            <a href="/corp/resume/${applicant.resumeIdx}" class="btn btn-sm btn-outline-primary">이력서 보기</a>
                        </div>
                    `;
                    recruitList.appendChild(div);
                });

                const nextPage = page + 1;
                loadMoreBtn.setAttribute('data-page', nextPage);

                if (nextPage >= data.totalPages) {
                    loadMoreBtn.style.display = 'none';
                }
            });
    });
</script>